% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tessellate.R
\name{tessellate}
\alias{tessellate}
\title{Tessellate a dbSpatial object}
\usage{
tessellate(
  dbSpatial,
  geomName = "geom",
  name = "tessellation",
  shape = c("hexagon", "square"),
  shape_size = NULL,
  gap = 0,
  radius = NULL,
  overwrite = FALSE,
  ...
)
}
\arguments{
\item{dbSpatial}{A \code{dbSpatial} object representing the spatial table.}

\item{geomName}{A character string specifying the name of the geometry column in the database.}

\item{name}{A character string specifying the name of the tessellation.}

\item{shape}{A character string indicating the shape of the tessellation.
Options are "hexagon" or "square".}

\item{shape_size}{A numeric value specifying the size of the shapes in the tessellation.
If \code{NULL}, a default size is calculated. See \code{GiottoClass::tessellate} for details.}

\item{gap}{A numeric value indicating the gap between tessellation shapes. Defaults to 0.}

\item{radius}{A numeric value specifying the radius for hexagonal tessellation.
This parameter is ignored for square tessellations.}

\item{overwrite}{A logical value indicating whether to overwrite an
existing tessellation with the same name. Default: \code{FALSE}.}

\item{...}{Additional arguments passed to underlying tessellation functions.}
}
\value{
The function writes the tessellation to the database connected to \code{dbSpatial} and
returns invisibly.
}
\description{
Creates a tessellation on the extent of \code{dbSpatial} with specified parameters.
The tessellation can be composed of hexagons or squares.
}
\examples{
coordinates <- data.frame(x = c(100, 200, 300), y = c(500, 600, 700))
attributes <- data.frame(id = 1:3, name = c("A", "B", "C"))

# Combine the coordinates and attributes
dummy_data <- cbind(coordinates, attributes)

# Create a duckdb connection
con = DBI::dbConnect(duckdb::duckdb(), ":memory:")

# Create a duckdb table with spatial points
db_points = dbSpatial(conn = con,
                      value = dummy_data,
                      x_colName = "x",
                      y_colName = "y",
                      name = "foo",
                      overwrite = TRUE)
                      
tessellate(db_points, name = "my_tessellation", shape = "hexagon", shape_size = 60)

}
\seealso{
Other geom_construction: 
\code{\link{st_read}()},
\code{\link{st_translate}()}
}
\concept{geom_construction}
