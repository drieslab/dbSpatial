% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/st_coveredby.R
\name{st_coveredby}
\alias{st_coveredby}
\alias{st_coveredby,dbSpatial,ANY,ANY,dbSpatial-method}
\title{Determine if geometries in two \code{\link{dbSpatial}}  objects are covered by each other}
\usage{
st_coveredby(
  g1,
  g1_geomName = "geom",
  g1_cols_keep = "all",
  g2,
  g2_geomName = "geom",
  g2_cols_keep = "all",
  overwrite = FALSE,
  name = "coveredby_geom",
  ...
)

\S4method{st_coveredby}{dbSpatial,ANY,ANY,dbSpatial}(
  g1,
  g1_geomName = "geom",
  g1_cols_keep = "all",
  g2,
  g2_geomName = "geom",
  g2_cols_keep = "all",
  overwrite = FALSE,
  name = "coveredBy_geom",
  ...
)
}
\arguments{
\item{g1}{A \code{\link{dbSpatial}} object.}

\item{g1_geomName}{\code{character}. The \code{geometry} column name in \code{g1}. Default: "geom".}

\item{g1_cols_keep}{\code{character vector}. The column names in \code{g1} to keep. Default: "all".}

\item{g2}{A \code{\link{dbSpatial}} object.}

\item{g2_geomName}{\code{character}. The \code{geometry} column name in \code{g2}. Default: "geom".}

\item{g2_cols_keep}{\code{character vector}. The column names in \code{g2} to keep. Default: "all".}

\item{overwrite}{\code{logical}. If \code{TRUE}, overwrite existing table. Default: \code{FALSE}.}

\item{name}{\code{character}. Default: "coveredBy_geom"}

\item{...}{Additional arguments passed to \code{\link{duckdb::dbSendQuery}}.}
}
\value{
\code{\link{dbSpatial}} object
}
\description{
\url{https://postgis.net/docs/ST_CoveredBy.html}
}
\section{Functions}{
\itemize{
\item \code{st_coveredby(
  g1 = dbSpatial,
  g1_geomName = ANY,
  g1_cols_keep = ANY,
  g2 = dbSpatial
)}: Method for \code{dbSpatial} objects

}}
\examples{
con = DBI::dbConnect(duckdb::duckdb(), ":memory:")

coordinates <- data.frame(x = c(100, 200, 300), y = c(500, 600, 700))
attributes <- data.frame(id = 1:3, name = c("A1", "B1", "C1"))

# Combine the coordinates and attributes
dummy_data <- cbind(coordinates, attributes)
 
points <- dbSpatial(conn = con,
                    name = "points", 
                    value = dummy_data, 
                    overwrite = TRUE, 
                    x_colName = "x", 
                    y_colName = "y")

# preview
points

# Create a second set of points, with B1 and C1 translated by + 100
dummy_data2 <- dummy_data
dummy_data2[c(2,3),c(1,2)] <- dummy_data2[c(2,3),c(1,2)] + 150
dummy_data2$name <- c('A2', 'B2', 'C2')

points2 <- dbSpatial(conn = con,
                     name = "points2", 
                     value = dummy_data2, 
                     overwrite = TRUE, 
                     x_colName = "x", 
                     y_colName = "y")
# preview
points2

res <- st_coveredby(g1 = points, 
                    g1_cols_keep = c("name"), 
                    g2 = points2,
                    overwrite = TRUE)

res
}
\seealso{
Other spatial_join: 
\code{\link{st_contains}()},
\code{\link{st_covers}()},
\code{\link{st_crosses}()},
\code{\link{st_difference}()},
\code{\link{st_disjoint}()},
\code{\link{st_distance}()},
\code{\link{st_equals}()},
\code{\link{st_intersects}()},
\code{\link{st_touches}()}
}
\concept{spatial_join}
