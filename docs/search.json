[{"path":"https://ed2uiz.github.io/dbSpatial/articles/class_structure.html","id":"class-structure","dir":"Articles","previous_headings":"","what":"Class Structure","title":"Class Structure","text":"dbSpatial package contains convenience functions working diverse spatial file formats duckdb spatial extension, well functions IO spatial terra spatVector spatRaster objects duckdb db. information duckdb spatial extension see duckdb spatial extension. information loading multiple geospatial files duckdb, see duckdbfs package.","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/articles/getting_started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started","text":"vignette demonstrates use dbSpatial package create duckdb database spatial points polygons starting various data sources.","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/articles/getting_started.html","id":"creating-dbspatpoints","dir":"Articles","previous_headings":"","what":"Creating dbSpatPoints","title":"Getting Started","text":"words dbSpatPoints class","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/articles/getting_started.html","id":"from-data-frames","dir":"Articles","previous_headings":"Creating dbSpatPoints","what":"From data.frames","title":"Getting Started","text":"","code":"library(DBI)  # create db connection in memory duckdb_conn = DBI::dbConnect(duckdb::duckdb(), \":memory:\")  # test data test_data = data.frame(x = 1:10, y = 1:10, id = 1:10)  # df, tbl createDbSpatPoints(conn = duckdb_conn,                    tbl = \"test_points\",                    data = test_data,                    overwrite = TRUE) #> Duckdb spatial extension installed and loaded #> # Source:   table<test_points> [10 x 4] #> # Database: DuckDB 0.9.0 [root@Darwin 22.4.0:R 4.3.0/:memory:] #>        x     y    id geom       #>    <int> <int> <int> <list>     #>  1     1     1     1 <raw [32]> #>  2     2     2     2 <raw [32]> #>  3     3     3     3 <raw [32]> #>  4     4     4     4 <raw [32]> #>  5     5     5     5 <raw [32]> #>  6     6     6     6 <raw [32]> #>  7     7     7     7 <raw [32]> #>  8     8     8     8 <raw [32]> #>  9     9     9     9 <raw [32]> #> 10    10    10    10 <raw [32]>"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/getting_started.html","id":"from--csv-file","dir":"Articles","previous_headings":"Creating dbSpatPoints","what":"From .csv file","title":"Getting Started","text":"","code":"# test data test_data = data.frame(x = 1:10, y = 1:10, id = 1:10)  # write to file write.csv(test_data, \"test_data.csv\", row.names = FALSE)  # load file in db createDbSpatPoints(conn = duckdb_conn,                    tbl = \"test_points\",                    data = 'test_data.csv',                    overwrite = TRUE) #> Duckdb spatial extension installed and loaded #> # Source:   table<test_points> [10 x 4] #> # Database: DuckDB 0.9.0 [root@Darwin 22.4.0:R 4.3.0/:memory:] #>        x     y    id geom       #>    <dbl> <dbl> <dbl> <list>     #>  1     1     1     1 <raw [32]> #>  2     2     2     2 <raw [32]> #>  3     3     3     3 <raw [32]> #>  4     4     4     4 <raw [32]> #>  5     5     5     5 <raw [32]> #>  6     6     6     6 <raw [32]> #>  7     7     7     7 <raw [32]> #>  8     8     8     8 <raw [32]> #>  9     9     9     9 <raw [32]> #> 10    10    10    10 <raw [32]>"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/getting_started.html","id":"from-terra-objects-spatvector","dir":"Articles","previous_headings":"Creating dbSpatPoints","what":"From {terra} objects: SpatVector","title":"Getting Started","text":"","code":"# load terra package library(terra)  duckdb_conn = DBI::dbConnect(duckdb::duckdb(), \":memory:\")  # Create a data.frame with x and y coordinates and attributes coordinates <- data.frame(x = c(100, 200, 300), y = c(500, 600, 700)) attributes <- data.frame(id = 1:3, name = c(\"A\", \"B\", \"C\"))  # Combine the coordinates and attributes dummy_data <- cbind(coordinates, attributes)  # Create a SpatVector from the data.frame dummy_spatvector <- terra::vect(dummy_data, geom = c(\"x\", \"y\"))  # Load SpatVector in db createDbSpatPoints(conn = duckdb_conn,                    tbl = \"spatVector_proxy\",                    data = dummy_spatvector,                    overwrite = TRUE)"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/getting_started.html","id":"from-terra-objects-spatraster","dir":"Articles","previous_headings":"Creating dbSpatPoints","what":"From {terra} objects: SpatRaster","title":"Getting Started","text":"","code":"# TODO"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/getting_started.html","id":"creating-dbspatpolygons","dir":"Articles","previous_headings":"","what":"Creating dbSpatPolygons","title":"Getting Started","text":"words dbSpatPolygons class","code":"#TODO"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"spatial-operations-with-terra-comparisons","dir":"Articles","previous_headings":"","what":"Spatial Operations with {terra} Comparisons","title":"Spatial Operations","text":"","code":"# load libs library(dbSpatial) #>  #> Attaching package: 'dbSpatial' #> The following object is masked from 'package:base': #>  #>     nrow library(terra) #> terra 1.7.46 library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:terra': #>  #>     intersect, union #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(magrittr) # remove once import %>% #>  #> Attaching package: 'magrittr' #> The following objects are masked from 'package:terra': #>  #>     extract, inset"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"create-test-data","dir":"Articles","previous_headings":"Spatial Operations with {terra} Comparisons","what":"Create test data","title":"Spatial Operations","text":"","code":"# Create a data.frame with x and y coordinates and attributes coordinates <- data.frame(x = c(100, 200, 300), y = c(500, 600, 700)) attributes <- data.frame(id = 1:3, name = c(\"A\", \"B\", \"C\"))  # Combine the coordinates and attributes dummy_data <- cbind(coordinates, attributes)  # Create a SpatVector from the data.frame dummy_spatvector <- vect(dummy_data, geom = c(\"x\", \"y\"))  # DuckDB duckdb_conn = DBI::dbConnect(duckdb::duckdb(), \":memory:\")  db_points = createDbSpatPoints(conn = duckdb_conn,                                tbl = \"spatVector_proxy\",                                data = dummy_spatvector,                                overwrite = TRUE) #> Duckdb spatial extension installed and loaded"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"extent","dir":"Articles","previous_headings":"Spatial Operations with {terra} Comparisons > Create test data","what":"Extent","title":"Spatial Operations","text":"","code":"# terra terra::ext(dummy_spatvector) #> SpatExtent : 100, 300, 500, 700 (xmin, xmax, ymin, ymax)  # dbSpatial dbSpatial::ST_Extent(tbl = db_points) #>   min_x max_x min_y max_y #> 1   100   300   500   700"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"shift","dir":"Articles","previous_headings":"Spatial Operations with {terra} Comparisons > Create test data","what":"Shift","title":"Spatial Operations","text":"","code":"# terra terra::geom(dummy_spatvector) #>      geom part   x   y hole #> [1,]    1    1 100 500    0 #> [2,]    2    1 200 600    0 #> [3,]    3    1 300 700    0  shifted_spatVector = terra::shift(dummy_spatvector, dx = 10, dy = 10)  terra::geom(shifted_spatVector) #>      geom part   x   y hole #> [1,]    1    1 110 510    0 #> [2,]    2    1 210 610    0 #> [3,]    3    1 310 710    0  # dbSpatial dbSpatial::ST_Translate(tbl = db_points, dx = 10, dy = 10) %>%   mutate(points = ST_AsText(geom)) %>%   select(points) #> # Source:   SQL [3 x 1] #> # Database: DuckDB 0.9.0 [root@Darwin 22.4.0:R 4.3.0/:memory:] #>   points          #>   <chr>           #> 1 POINT (110 510) #> 2 POINT (210 610) #> 3 POINT (310 710)"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"flip","dir":"Articles","previous_headings":"Spatial Operations with {terra} Comparisons > Create test data","what":"Flip","title":"Spatial Operations","text":"","code":"# terra terra::geom(dummy_spatvector) #>      geom part   x   y hole #> [1,]    1    1 100 500    0 #> [2,]    2    1 200 600    0 #> [3,]    3    1 300 700    0  flipped_spatVector = terra::flip(dummy_spatvector, direction = \"vertical\")  terra::geom(flipped_spatVector) #>      geom part   x   y hole #> [1,]    1    1 100 500    0 #> [2,]    2    1 200 400    0 #> [3,]    3    1 300 300    0  # <----- not equivalent to terra::flip ------> # dbSpatial # db_points %>% #   mutate(points = ST_AsText(geom)) #  # db_points %>% #   mutate(flipped_points = ST_AsText(ST_FlipCoordinates(geom)))"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"is-valid","dir":"Articles","previous_headings":"Spatial Operations with {terra} Comparisons > Create test data","what":"Is.Valid","title":"Spatial Operations","text":"","code":"# terra terra::geom(dummy_spatvector) #>      geom part   x   y hole #> [1,]    1    1 100 500    0 #> [2,]    2    1 200 600    0 #> [3,]    3    1 300 700    0  terra::is.valid(dummy_spatvector) #> [1] TRUE TRUE TRUE  # dbSpatial db_points %>%   mutate(points = ST_AsText(geom)) %>%   select(points) #> # Source:   SQL [3 x 1] #> # Database: DuckDB 0.9.0 [root@Darwin 22.4.0:R 4.3.0/:memory:] #>   points          #>   <chr>           #> 1 POINT (100 500) #> 2 POINT (200 600) #> 3 POINT (300 700)  dbSpatial::ST_IsValid(tbl = db_points) #> [1] TRUE TRUE TRUE"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"y-x-max","dir":"Articles","previous_headings":"Spatial Operations with {terra} Comparisons > Create test data","what":"Y, X Max","title":"Spatial Operations","text":"","code":"# terra terra::geom(dummy_spatvector) #>      geom part   x   y hole #> [1,]    1    1 100 500    0 #> [2,]    2    1 200 600    0 #> [3,]    3    1 300 700    0  terra::ymax(dummy_spatvector) #> [1] 700  terra::xmax(dummy_spatvector) #> [1] 300  # dbSpatial dbSpatial::ST_YMax(db_points) #> [1] 700 dbSpatial::ST_XMax(db_points) #> [1] 300"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"nrow","dir":"Articles","previous_headings":"Spatial Operations with {terra} Comparisons > Create test data","what":"nrow","title":"Spatial Operations","text":"","code":"# terra terra::nrow(dummy_spatvector) #> [1] 3  # dbSpatial dbSpatial::nrow(db_points) #> [1] 3"},{"path":"https://ed2uiz.github.io/dbSpatial/articles/spatial_operations.html","id":"centroids","dir":"Articles","previous_headings":"Spatial Operations with {terra} Comparisons > Create test data","what":"centroids","title":"Spatial Operations","text":"","code":"# terra terra::geom(dummy_spatvector) #>      geom part   x   y hole #> [1,]    1    1 100 500    0 #> [2,]    2    1 200 600    0 #> [3,]    3    1 300 700    0  terra::centroids(dummy_spatvector) #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 3, 2  (geometries, attributes) #>  extent      : 100, 300, 500, 700  (xmin, xmax, ymin, ymax) #>  coord. ref. :   #>  names       :    id  name #>  type        : <int> <chr> #>  values      :     1     A #>                    2     B #>                    3     C"},{"path":"https://ed2uiz.github.io/dbSpatial/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edward Ruiz. Author, maintainer.","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ruiz E (2023). dbSpatial: Wrappers R spatial objects duckdb spatial extension. https://github.com/Ed2uiz/dbSpatial, https://ed2uiz.github.io/dbSpatial/.","code":"@Manual{,   title = {dbSpatial: Wrappers for R spatial objects and duckdb spatial extension},   author = {Edward Ruiz},   year = {2023},   note = {https://github.com/Ed2uiz/dbSpatial, https://ed2uiz.github.io/dbSpatial/}, }"},{"path":"https://ed2uiz.github.io/dbSpatial/index.html","id":"dbspatial","dir":"","previous_headings":"","what":"Wrappers for R spatial objects and duckdb spatial extension","title":"Wrappers for R spatial objects and duckdb spatial extension","text":"goal dbSpatial provide convenience functions R DuckDB spatial extension well compatibility {terra} R spatial objects DuckDB backend.","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Wrappers for R spatial objects and duckdb spatial extension","text":"can install development version dbSpatial Github like :","code":"# install.packages(\"pak\", repos = sprintf(\"https://r-lib.github.io/p/pak/stable/%s/%s/%s\", .Platform$pkgType, R.Version()$os, R.Version()$arch)) pak::pak(\"ed2uiz/dbSpatial\")"},{"path":"https://ed2uiz.github.io/dbSpatial/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Wrappers for R spatial objects and duckdb spatial extension","text":"DuckDB spatial extension can used wrapper functions package directly (ST_*()), dplyr verbs containing ST_*() functions, SQL queries DuckDB database connection containing ST_*() functions.","code":"library(dbSpatial) #>  #> Attaching package: 'dbSpatial' #> The following object is masked from 'package:base': #>  #>     nrow  # create duckdb db in memory duckdb_conn = DBI::dbConnect(duckdb::duckdb(), \":memory:\")  # install and load duckdb spatial extension loadSpatial(conn = duckdb_conn) #> Duckdb spatial extension installed and loaded  # use ST_*() functions directly in R # TODO  # through dplyr verbs # TODO  # through SQL queries # TODO"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Extent.html","id":null,"dir":"Reference","previous_headings":"","what":"Get extent of a geometry — ST_Extent","title":"Get extent of a geometry — ST_Extent","text":"Get extent geometry","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Extent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get extent of a geometry — ST_Extent","text":"","code":"ST_Extent(tbl)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Extent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get extent of a geometry — ST_Extent","text":"tbl name table duckdb database","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Extent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get extent of a geometry — ST_Extent","text":"data.frame extent geom column tbl","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Extent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get extent of a geometry — ST_Extent","text":"","code":"# Create a data.frame with x and y coordinates and attributes coordinates <- data.frame(x = c(100, 200, 300), y = c(500, 600, 700)) attributes <- data.frame(id = 1:3, name = c(\"A\", \"B\", \"C\"))  # Combine the coordinates and attributes dummy_data <- cbind(coordinates, attributes)  # Create a SpatVector from the data.frame dummy_spatvector <- vect(dummy_data, geom = c(\"x\", \"y\")) #> Error in vect(dummy_data, geom = c(\"x\", \"y\")): could not find function \"vect\"  # Create a duckdb connection duckdb_conn = DBI::dbConnect(duckdb::duckdb(), \":memory:\")  # Create a duckdb table with spatial points db_points = createDbSpatPoints(conn = duckdb_conn,                                tbl = \"spatVector_proxy\",                                data = dummy_spatvector,                                overwrite = TRUE) #> Error in eval(expr, envir, enclos): object 'dummy_spatvector' not found # Get extent of the table ext(db_points) #> Error in ext(db_points): could not find function \"ext\""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_IsValid.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if geometry is valid — ST_IsValid","title":"Determine if geometry is valid — ST_IsValid","text":"Determine geometry valid","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_IsValid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if geometry is valid — ST_IsValid","text":"","code":"ST_IsValid(tbl)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_IsValid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if geometry is valid — ST_IsValid","text":"tbl name table duckdb database","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_IsValid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if geometry is valid — ST_IsValid","text":"boolean vector whether geometry tbl valid","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_IsValid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine if geometry is valid — ST_IsValid","text":"","code":"# Create a data.frame with x and y coordinates and attributes coordinates <- data.frame(x = c(100, 200, 300), y = c(500, 600, 700)) attributes <- data.frame(id = 1:3, name = c(\"A\", \"B\", \"C\"))  # Combine the coordinates and attributes dummy_data <- cbind(coordinates, attributes)  # Create a SpatVector from the data.frame dummy_spatvector <- vect(dummy_data, geom = c(\"x\", \"y\")) #> Error in vect(dummy_data, geom = c(\"x\", \"y\")): could not find function \"vect\"  # Create a duckdb connection duckdb_conn = DBI::dbConnect(duckdb::duckdb(), \":memory:\")  # Create a duckdb table with spatial points db_points = createDbSpatPoints(conn = duckdb_conn,                                tbl = \"spatVector_proxy\",                                data = dummy_spatvector,                                overwrite = TRUE) #> Error in eval(expr, envir, enclos): object 'dummy_spatvector' not found # Get extent of the table ST_IsValid(db_points) #> Error in eval(expr, envir, enclos): object 'db_points' not found"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate x, y coordinates by delta x, delta y — ST_Translate","title":"Translate x, y coordinates by delta x, delta y — ST_Translate","text":"Translate x, y coordinates delta x, delta y","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate x, y coordinates by delta x, delta y — ST_Translate","text":"","code":"ST_Translate(tbl, dx, dy)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate x, y coordinates by delta x, delta y — ST_Translate","text":"tbl name table duckdb database dx delta x dy delta y","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Translate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate x, y coordinates by delta x, delta y — ST_Translate","text":"duckdb table translated geometries","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_Translate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate x, y coordinates by delta x, delta y — ST_Translate","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_XMax.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maximum x coordinate — ST_XMax","title":"Get maximum x coordinate — ST_XMax","text":"Get maximum x coordinate","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_XMax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maximum x coordinate — ST_XMax","text":"","code":"ST_XMax(tbl)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_XMax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maximum x coordinate — ST_XMax","text":"tbl name table duckdb database","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_XMax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maximum x coordinate — ST_XMax","text":"maximum x coordinate","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_XMax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get maximum x coordinate — ST_XMax","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_YMax.html","id":null,"dir":"Reference","previous_headings":"","what":"Get maximum y coordinate — ST_YMax","title":"Get maximum y coordinate — ST_YMax","text":"Get maximum y coordinate","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_YMax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get maximum y coordinate — ST_YMax","text":"","code":"ST_YMax(tbl)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_YMax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get maximum y coordinate — ST_YMax","text":"tbl name table duckdb database","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_YMax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get maximum y coordinate — ST_YMax","text":"maximum y coordinate","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/ST_YMax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get maximum y coordinate — ST_YMax","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a duckdb table with spatial points — createDbSpatPoints","title":"Create a duckdb table with spatial points — createDbSpatPoints","text":"Create duckdb table spatial points","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a duckdb table with spatial points — createDbSpatPoints","text":"","code":"createDbSpatPoints(data, conn, tbl, overwrite = FALSE, ...)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a duckdb table with spatial points — createDbSpatPoints","text":"data Data added database. Can data.frame, tbl, file path, terra spatVector/spatRaster. Experimental support lists files supported duckdbfs. conn Connection duckdb database. tbl Name table add dbSpatPoints . overwrite Overwrite existing table (default = FALSE) ... Additional arguments passed","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a duckdb table with spatial points — createDbSpatPoints","text":"duckdb table spatial points.","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a duckdb table with spatial points — createDbSpatPoints","text":"full list supported file types see ST_Read() duckdb.","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a duckdb table with spatial points — createDbSpatPoints","text":"","code":"# create in-memory duckdb db duckdb_conn = DBI::dbConnect(duckdb::duckdb(), \":memory:\")  # test data test_data = data.frame(x = 1:10, y = 1:10, id = 1:10)  write.csv(test_data, \"test_data.csv\", row.names = FALSE)  # df, tbl createDbSpatPoints(conn = duckdb_conn,                    tbl = \"test_points\",                    data = test_data,                    overwrite = TRUE) #> Duckdb spatial extension installed and loaded #> # Source:   table<test_points> [10 x 4] #> # Database: DuckDB 0.9.0 [root@Darwin 22.4.0:R 4.3.0/:memory:] #>        x     y    id geom       #>    <int> <int> <int> <list>     #>  1     1     1     1 <raw [32]> #>  2     2     2     2 <raw [32]> #>  3     3     3     3 <raw [32]> #>  4     4     4     4 <raw [32]> #>  5     5     5     5 <raw [32]> #>  6     6     6     6 <raw [32]> #>  7     7     7     7 <raw [32]> #>  8     8     8     8 <raw [32]> #>  9     9     9     9 <raw [32]> #> 10    10    10    10 <raw [32]>  # file createDbSpatPoints(conn = duckdb_conn,                    tbl = \"test_points\",                    data = 'test_data.csv',                    overwrite = TRUE) #> Duckdb spatial extension installed and loaded #> # Source:   table<test_points> [10 x 4] #> # Database: DuckDB 0.9.0 [root@Darwin 22.4.0:R 4.3.0/:memory:] #>        x     y    id geom       #>    <dbl> <dbl> <dbl> <list>     #>  1     1     1     1 <raw [32]> #>  2     2     2     2 <raw [32]> #>  3     3     3     3 <raw [32]> #>  4     4     4     4 <raw [32]> #>  5     5     5     5 <raw [32]> #>  6     6     6     6 <raw [32]> #>  7     7     7     7 <raw [32]> #>  8     8     8     8 <raw [32]> #>  9     9     9     9 <raw [32]> #> 10    10    10    10 <raw [32]>"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPolygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a duckdb table with spatial polygons — createDbSpatPolygons","title":"Create a duckdb table with spatial polygons — createDbSpatPolygons","text":"Create duckdb table spatial polygons","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPolygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a duckdb table with spatial polygons — createDbSpatPolygons","text":"","code":"createDbSpatPolygons(data, conn, tbl, overwrite = FALSE, ...)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPolygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a duckdb table with spatial polygons — createDbSpatPolygons","text":"data Data added. Can terra::spatRaster, terra::spatVector, file path. conn Connection duckdb database. tbl Name table add dbSpatPolygons . overwrite Overwrite existing table (default = FALSE) ... Additional arguments passed.","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPolygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a duckdb table with spatial polygons — createDbSpatPolygons","text":"duckdb table spatial polygons.","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/createDbSpatPolygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a duckdb table with spatial polygons — createDbSpatPolygons","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/loadSpatial.html","id":null,"dir":"Reference","previous_headings":"","what":"Install and/or load duckdb spatial extension — loadSpatial","title":"Install and/or load duckdb spatial extension — loadSpatial","text":"Install /load duckdb spatial extension","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/loadSpatial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install and/or load duckdb spatial extension — loadSpatial","text":"","code":"loadSpatial(conn)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/loadSpatial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install and/or load duckdb spatial extension — loadSpatial","text":"conn duckdb connection","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/loadSpatial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install and/or load duckdb spatial extension — loadSpatial","text":"","code":"duckdb_conn = DBI::dbConnect(duckdb::duckdb(), \":memory:\") loadSpatial(conn = duckdb_conn) #> Duckdb spatial extension installed and loaded"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/nrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of rows in a duckdb table — nrow","title":"Count number of rows in a duckdb table — nrow","text":"Count number rows duckdb table","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/nrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of rows in a duckdb table — nrow","text":"","code":"nrow(tbl)"},{"path":"https://ed2uiz.github.io/dbSpatial/reference/nrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of rows in a duckdb table — nrow","text":"tbl name table duckdb database","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/nrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of rows in a duckdb table — nrow","text":"number rows tbl (integer)","code":""},{"path":"https://ed2uiz.github.io/dbSpatial/reference/nrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count number of rows in a duckdb table — nrow","text":"","code":"TODO #> Error in eval(expr, envir, enclos): object 'TODO' not found"}]
